const { ApplicationCommandOptionType, PermissionFlagsBits } = require('discord.js');
const { RookEmbed } = require('../../classes/embed/rembed.class');

module.exports = {
  /**
   *
   * @param {Client} client
   * @param {Interaction} interaction
   */
  execute: async (client, interaction) => {
    const PROFILE = require('../../PROFILE.json');
    const guildIDs = require('../../dbs/guilds.json');
    let DEV_MODE = PROFILE["profiles"][PROFILE["selectedprofile"]]?.DEV;

    const messagesToDelete = interaction.options.get('amount').value;

    // Make the initial reply private


    // Validate the number of messages to delete
    if (messagesToDelete < 1 || messagesToDelete > 100) {
      let props = {
        color: "#FF0000",
        title: {
          text: "Error"
        },
        description: "Please specify a number between 1 and 100."
      };
      const embed = new RookEmbed(props);
      await interaction.editReply({ embeds: [embed], ephemeral: true });
      return;
    }

    try {
      // Fetch messages and delete them
      const deletedMessages = await interaction.channel.bulkDelete(messagesToDelete, true);

      // Log the action in the logs channel if DEV_MODE is off
      if (!DEV_MODE) {
        const guildID = interaction.guild.id;
        const guildChannels = require(`../../dbs/${guildID}/channels.json`);
        const logs = client.channels.cache.get(guildChannels["logging"]);
        if (logs) {
          let props = {
            color: "#FF8C00",
            title: {
              text: "ðŸ§¹ Messages Purged"
            },
            fields: [
              { name: 'Channel', value: `${interaction.channel}`, inline: true },
              { name: 'Purged By', value: `${interaction.user}\n(ID: ${interaction.user.id})`, inline: true },
              { name: 'Amount', value: `${deletedMessages.size}`, inline: false }
            ],
            footer: {
              msg: `Actioned by ${interaction.user.displayName}`
            }
          };
          const embed = new RookEmbed(props);
          logs.send({ embeds: [embed] });
        } else {
          console.log("Logs channel not found.");
        }
      }

      // Private confirmation message
      let props2 = {
        color: "#00FF00",
        title: {
          text: "Purged"
        },
        description: `Successfully purged ${deletedMessages.size} messages in this channel.`
      };
      const embed2 = new RookEmbed(props2);
      await interaction.followUp({ embeds: [embed2], ephemeral: true });
    } catch (error) {
      console.log(`There was an error when purging messages: ${error.stack}`);
      let props = {
        color: "#FF0000",
        title: {
          text: "Error"
        },
        description: "I couldn't delete those messages. Make sure they're not older than 14 days."
      };
      const embed = new RookEmbed(props);
      await interaction.editReply({ embeds: [embed], ephemeral: true });
    }
  },

  name: 'purge',
  description: 'Deletes a specified number of messages from the current channel.',
  options: [
    {
      name: 'amount',
      description: 'The number of messages to delete (1-100).',
      type: ApplicationCommandOptionType.Integer,
      required: true,
    }
  ],
  permissionsRequired: [PermissionFlagsBits.ManageMessages],
  botPermissions: [PermissionFlagsBits.ManageMessages],
};
