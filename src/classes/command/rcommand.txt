RookCommand
  // Member variables/properties
    name:         Command slug for running from CLI, /[name]
    category:     Command Category; sorts into Help file
    description:  Command Description; blurb that shows in Discord
      Command menu and in Help file
    options:      Command Options; parameters to be asked for in Discord
      Command menu and described in Help file
      Goal is to have these also able to be sent via canned dicts
    channelName:  Global variable for Channel Name/ID to send response to
    access:       Command Access; lowest level of authorized member access
    ephemeral:    Global variable for ephemeral response
    flags:        Global variable for different flags
    null:         Global variable for not sending a thing because
      a thing will be sent a different way
    pages:        List of pages to send as response
    error:        Global variable for printing an error
    errors:       Global variable for canned error messages to send
    DEV:          Global variable for DEV Mode
    channel:      Global variable for Channel Object to send response to
    defaults:     Global variable for Default Profile
    GLOBALS:      Global variable for Specified Profile
    PACKAGE:      Global variable for Node Package data
    inputData:    Gets set to foundHandles which includes players,
      invalid sources, flags
    permissionsRequired:  BitField for user permissions
    botPermissions:       BitField for bot permissions

  // Member functions
    // constructor()
    // getProfile()       : Should be called by constructor()
    // getChannel()       : Should be called by build()
    // getEmoji()         : Called from action()
    // sanitizeMarkdown() : ???
    // processArgs()      : Called from build();
      Should be processing chosen or canned args
    // action()           : Called from build()
    // build()            : Called from execute()
    // send()             : Called from execute()
    // execute()          : Called from CommandHandler & test()
    // test()             : Called from /testsuite Command

    // Build object
      constructor(
        comprops: Command Properties
        props:    Embed Properties
      )

    // Retrieve profile info
      getProfile()
      // Default to "default"
      // Load Defaults
      // Load Global profiles
      // Load Selected profile
      // Load Package data
      // Set DEV Mode if env.ENV_ACTIVE == "development"

    // Get destination Channel
      getChannel(
        interaction:  Interaction that called the Command
        channelType:  Key for channel to get from database
      )
      // Get Channel Names/IDs from db file
      // Find requested channel
      // Return Channel object

    // Get specified Emoji
      getEmoji(
        emojiKey: Key for emoji to retrieve
        emojis:   Set of emojis to look in
      )
      // Find emoji in server
      // Return found emoji or emojiKey if emoji not found

    // sanitizeMarkdown()
      // FIXME: Is this actually used for something?

    // Process Argument data
      processArgs(
        interaction:  Interaction that called the Command
        flags:        Flags
        options:      Option data, either from Discord or canned args
      )
      // Calculate entities: Discord, Bot
      // Get user issuing Command
      // If we have a User, set it as entities.Author
      // If we have a Mention, set it as entities.Mention
        (get this from args/options)
      // If we have a User, load it as the Target
      // If we have a Mention, load it as the Target
        // FIXME: Mention is gonna be in args/options, look for it there;
        figure it out
      // If we have stuff to Search...
        // FIXME: Search is gonna be in args/options, look for it there;
          figure it out

    // Process Action
      action(
        client:       Client Object
        interaction:  Interaction that called the Command
        cmd:          Command Name
        options:      Option data, either from Discord or canned args
      )
      // If Command doesn't alter stuff, just do the thing
      // If Command DOES alter stuff,
        // If DEV, describe the thing
        // If NOT DEV, do the thing

    // Pre-flight stuff for Command
      build(
        client:       Client Object
        interaction:  Interaction that called the Command
        cmd:          Command Name
        options:      Option data, either from Discord or canned args
      )
      // If there's no error, process the options, call action()

    // Send the thing
      send(
        interaction:  Interaction that called the Command
        pages:        Generated pages from action
        emojis:       Emojis for First/Previous/Next/Last
        timeout:      Timeout for when to ignore page-turning for this
          interaction
        forcepages:   Force page-turning for this interaction
      )
      // If we didn't specify a channel, use the channel of this interaction
      // If we're forcing pages, do default emojis & timeout
      // If we're Ephemeral, set the MessageFlags
      // If we have multiple pages, cycle through them
        // If just one page, send it as an Embed
          // If we're Ephemeral, set the MessageFlags
          // If no flags, editReply
          // If flags, followUp
        // If we're multiple pages
          // Sanity-check emojis for page-turning
          // Build Pagination Object
          // If we're Ephemeral, set the MessageFlags
          // If no flags, editReply
          // If flags, followUp
      // If we have one, send it as an Embed
        // If we're Ephemeral, set the MessageFlags
        // If no flags, editReply
        // If flags, followUp

    // Execute!
      execute(
        client:       Client Object
        interaction:  Interaction that called the Command
        cmd:          Command Name
        options:      Option data, either from Discord or canned args
        skipBody:     Skip processing body?
      )
      // If we got no options, make an empty object
      // Try to deferReply()
      // getProfile()
        // FIXME: Move to constructor
      // Process Args
      // If we're not skipping the body
        // build()
      // If we have an error, make it errortastic
      // If it's only an embed, see if it's full or slim
      // If it ain't null, send it

    // Test!
      test(
        client:       Client Object
        interaction:  Interaction that called the Command
        cmd:          Command Name
      )
      // If basic test, just execute()
      // If not basic test, Command will override this
